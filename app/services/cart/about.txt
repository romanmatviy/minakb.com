Service "Shop Cart 2.6.1"
for WhiteLion 1.4

Author: Ostap Matskiv
Date 2.6.1 : 10.09.2021
Date 2.6   : 10.06.2021
Date 2.5   : 20.03.2021
Date 2.4   : 15.10.2020
Date 2.3   : 11.06.2020
Date 2.2   : 17.05.2020

Description: Корзина. Підтримка складів
Options:
	useCheckBox 		bool	Використовувати галочки вибору (дозволяє оформити вибіркові товари з корзини)
	usePassword 		bool	Аутентифікація клієнтів (вимагати/встановити пароль клієнта при оформленні замовлення)
	dogovirOfertiLink 	text	Посилання на Договір оферти (для онлайн оплати)

`s_cart`
1	id 	int(11) AUTO_INCREMENT
2	id_1c varchar(36) - внутрішній id з 1с. По ньому ми ідентифікуємося, оновлюємо дані по замоленню з 1с
3	public_number 	text - публічний номер з 1с. Появляється після першої синхронізації з 1с. До цього використовується id
4	user 	int(11) - id покупця з `wl_users`
5	status int(2) - id статусу замовлення з `s_cart_status`
6	shipping_id 	int(11) - id механізму доставки з `s_cart_shipping`
7	shipping_info text - serialize масив з деталями доставки: отримувач (хто + номер), місто, відділення. В залежності від типу доставки можуть бути різні ключі масиву
8	payment_alias 	int(11)
9	payment_id 	int(11)
Якщо (payment_alias == 0 && payment_id == 0) => оплати немає, платіжний механізм не вибрано клієнтом
Якщо (payment_alias == 0 && payment_id > 0) => означає що це оплата штатна (від корзини, не модуль). Тоді payment_id це id з `s_cart_payments`. Наприклад "Готівкою при отриманні"
Якщо (payment_alias > 0 && payment_id == 0) => Оплата через платіжний модуль. payment_alias - id модулю з `wl_aliases`. (payment_id == 0) => Помилка ініціалізації модулю оплати
Якщо (payment_alias > 0 && payment_id > 0) => Оплата через платіжний модуль. payment_alias - id модулю з `wl_aliases`. payment_id - id оплати в такому модулю. Так як в нас тільки один сторонній сервіс оплати, то payment_id - id з `s_liqpay`
Оплата передбачає повну оплату, не частинами!

10	total 	float - загальна сума замовлення до оплати (в грн)! (вже враховує всі модифікатори: акції, знижки, бонуси)
11	payed 	float - скільки оплачено від загальної суми. Заповнюється з 1с
12	bonus 	int(11) - id з `s_cart_bonus` - бонус коди. На даний момент не використовуємо
13	discount 	float - сума знижки до замовлення в грн. Не враховує знижки товарів. Як правило це знижка з bonus
14	comment text - коментар клієнта до замовлення
15	manager_comment text - коментар менеджера до замовлення
16	ttn text - ТТН служби доставки. На даний момент не передбачає відправку частинами. Для частин планував вказувати сюди ТТН або serialize, або просто через кому.
17	date_add int(11) - дата створення замовлення клієнтом
18	manager int(11) - відповідальний менеджер з `wl_users`
19	date_edit	int(11) - дата останньої модифікації замовлення (зміна статусу, відправка товару, тощо)
20  source enum(`site`, `1c`) - джерело замовлення
21	1c_status tinyint(4) - id статусу синхронізації з 1с. Дані з status. Для синхронізації шукаю де status != 1c_status - замовлення змодифікавано на сайті, потрібно відправити дані в 1с
22	1c_exchange int(11) - дата останньої синхронізації з 1с

`s_cart_payments` - МЕХАНІЗМИ ОПЛАТИ. Використовується для формування списку оплат в корзині
1	id	int(11) AUTO_INCREMENT
2 	id_1c 	varchar(36)
3 	wl_alias	int(11) - id модулю з `wl_aliases`. Якщо == 0 оплата штатна (від корзини, не модуль, наприклад "Готівкою при отриманні")
4	active tinyint(1) - 1 || 0
5	position	int(11)
6	name	text - назва
7	info	text - інформація про оплату, яку бачить клієнт

`s_cart_products` - ТОВАРИ В КОРЗИНІ
1	id	AUTO_INCREMENT
2	cart	int(11) - id корзини з `s_cart`. Якщо == 0 - товар в корзині, замовлення не оформлено
3	user	int(11) - id покупця:
Якщо (user > 0) => id покупця з `wl_users`
Якщо (user < 0) => id покупця з `s_cart_users`
4	active	tinyint(1) - товар в корзині перед замоленням активний/відкладено
5	product_alias	int(11) - id модулю магазину з `wl_aliases` ("Основний магазин" або "Сувеніри")
6	product_id	int(11) - id товару з `s_shopshowcase_products`
7	product_options	text - Якщо товар передбачає властивості, які потрібні при замоленні (розмір, колір..) - зберігаються тут
8	storage_alias	int(11) - id складу з `wl_aliases` і `s_shopstorage` (id співпадають)
9	storage_invoice	int(11) - id товарної накладної складу, по якій відбулося замовлення. По ній відбувається резерування товару
10	price	double - кінцева ціна товару за 1 шт (одининицю) в грн, з врахуванням всіх знижок
11	price_in	double - вхідна ціна. Використовується для архівних даних, бухгалтерії
12	quantity	int(11) - підтверджена кількість (може редагуватися в процесі замовлення з адмінки/1с)
13	quantity_wont	int(11) - бажана кількість при замовленні
14	quantity_returned	int(11) - скільки одиниць повернено по даному товару
15	discount	double - загальна сума знижки по товару
16	bonus	int(11) - id з `s_cart_bonus` - бонус коди. На даний момент не використовуємо. *Коли клієнт застосовує бонус-код, самого замовлення ще немає. Проміжна колонка для тимчасових даних. Згодом переноситься у `s_cart`
17	date	int(11) - дата додачі товару до корзини

Log:
2.2		Оновлено підтримку складів
		Додано підтримку роботи з meta-даними (для СЕО)
		Виправлено автентифікацію клієнта
		Запис телефону клієнта в профіль при оформленні замовлення (якщо відсутні дані)
		Безпечні дані у відповідь ajax (тільки те, що треба, без надлишку службових)
		Адмін. Пошук/фільтрація замовлень за: датою і періодом, статусум, клієнтом, менеджером, оплатою

2.3 	Доопрацьовано склади, оплату
		Додано підтримку повернення
		Оновлено статуси замовлення
		Додано внесення оплати замовлення через адмін
		Оновлено друк, візуальні правки

2.4 	Додано віртуальні товари/послуги
		Після оформлення замовлення /success
		Сторінка оплати /pay , якщо оплата одна => на сервіс оплати (ліквідовано проміжну сторінку)
		Додано __getById()
		Якщо оплата була частковою, клієнт може доплатити

2.5		додано конфіг шаблону use__profile_view
		доопрацьовано $_SESSION['option']->usePassword. Якщо виключено => примусову авторизацію, автологінацію виключено.
		додано неавторизований доступ до замовлення за ключем доступу ?key=*** (auth_id)
		додано /buyProduct (купити "в один клік") - спрощений режим оформлення замовлення
		додано /set__shippingToOrder() - клієнтська та адмін: можливість зредагувати інформацію про доставку поки замовлення $cart->action == 'new'
		для неавторизованого покупця у /checkout приховано поля отримувача (автоматично з покупця)


2.6 	оновлено роботу з wl_user_model: уніфіковано логінацію на /login
		доопрацьовано ідентифікацію через телефон
		дозбереження відсутніх даних (ім'я, телефон, емейл) в залежності що бракує
		оновлено роботу з доставками: механізм впливає на "потрібні" поля + оплату. Виправлено платну доставку
		додано можливість вказати вартість доставки з адмінки
		додано конфіг private $cart->index_as_checkout_view
		уніфіковано відповідь через private $cart->addTotalData()

2.6.1 	додано підтримку мови користувача:
			при оформленні замовлення
			з панелі керування лист сповіщення клієнту на мові його профілю
		додано переклади шаблонів листів на EN, RU